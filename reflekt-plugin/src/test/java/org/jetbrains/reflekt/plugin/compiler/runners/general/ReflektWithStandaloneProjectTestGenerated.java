

package org.jetbrains.reflekt.plugin.compiler.runners.general;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling")
@TestDataPath("$PROJECT_ROOT")
public class ReflektWithStandaloneProjectTestGenerated extends AbstractReflektWithStandaloneProjectTest {
    @Test
    public void testAllFilesPresentInGeneral_standalone_project_calling() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
    }

    @Nested
    @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt")
    @TestDataPath("$PROJECT_ROOT")
    public class Reflekt {
        @Test
        public void testAllFilesPresentInReflekt() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Nested
        @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes")
        @TestDataPath("$PROJECT_ROOT")
        public class Classes {
            @Test
            public void testAllFilesPresentInClasses() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("classes-1.kt")
            public void testClasses_1() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-1.kt");
            }

            @Test
            @TestMetadata("classes-10.kt")
            public void testClasses_10() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-10.kt");
            }

            @Test
            @TestMetadata("classes-11.kt")
            public void testClasses_11() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-11.kt");
            }

            @Test
            @TestMetadata("classes-12.kt")
            public void testClasses_12() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-12.kt");
            }

            @Test
            @TestMetadata("classes-13.kt")
            public void testClasses_13() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-13.kt");
            }

            @Test
            @TestMetadata("classes-14.kt")
            public void testClasses_14() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-14.kt");
            }

            @Test
            @TestMetadata("classes-15.kt")
            public void testClasses_15() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-15.kt");
            }

            @Test
            @TestMetadata("classes-16.kt")
            public void testClasses_16() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-16.kt");
            }

            @Test
            @TestMetadata("classes-17.kt")
            public void testClasses_17() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-17.kt");
            }

            @Test
            @TestMetadata("classes-18.kt")
            public void testClasses_18() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-18.kt");
            }

            @Test
            @TestMetadata("classes-19.kt")
            public void testClasses_19() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-19.kt");
            }

            @Test
            @TestMetadata("classes-2.kt")
            public void testClasses_2() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-2.kt");
            }

            @Test
            @TestMetadata("classes-20.kt")
            public void testClasses_20() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-20.kt");
            }

            @Test
            @TestMetadata("classes-21.kt")
            public void testClasses_21() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-21.kt");
            }

            @Test
            @TestMetadata("classes-3.kt")
            public void testClasses_3() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-3.kt");
            }

            @Test
            @TestMetadata("classes-4.kt")
            public void testClasses_4() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-4.kt");
            }

            @Test
            @TestMetadata("classes-5.kt")
            public void testClasses_5() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-5.kt");
            }

            @Test
            @TestMetadata("classes-6.kt")
            public void testClasses_6() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-6.kt");
            }

            @Test
            @TestMetadata("classes-7.kt")
            public void testClasses_7() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-7.kt");
            }

            @Test
            @TestMetadata("classes-8.kt")
            public void testClasses_8() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-8.kt");
            }

            @Test
            @TestMetadata("classes-9.kt")
            public void testClasses_9() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/classes/classes-9.kt");
            }
        }

        @Nested
        @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions")
        @TestDataPath("$PROJECT_ROOT")
        public class Functions {
            @Test
            public void testAllFilesPresentInFunctions() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("functions-1.kt")
            public void testFunctions_1() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions/functions-1.kt");
            }

            @Test
            @TestMetadata("functions-2.kt")
            public void testFunctions_2() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions/functions-2.kt");
            }

            @Test
            @TestMetadata("functions-3.kt")
            public void testFunctions_3() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions/functions-3.kt");
            }

            @Test
            @TestMetadata("functions-4.kt")
            public void testFunctions_4() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions/functions-4.kt");
            }

            @Test
            @TestMetadata("functions-5.kt")
            public void testFunctions_5() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions/functions-5.kt");
            }

            @Test
            @TestMetadata("functions-6.kt")
            public void testFunctions_6() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/functions/functions-6.kt");
            }
        }

        @Nested
        @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects")
        @TestDataPath("$PROJECT_ROOT")
        public class Objects {
            @Test
            public void testAllFilesPresentInObjects() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("objects-1.kt")
            public void testObjects_1() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-1.kt");
            }

            @Test
            @TestMetadata("objects-10.kt")
            public void testObjects_10() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-10.kt");
            }

            @Test
            @TestMetadata("objects-11.kt")
            public void testObjects_11() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-11.kt");
            }

            @Test
            @TestMetadata("objects-12.kt")
            public void testObjects_12() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-12.kt");
            }

            @Test
            @TestMetadata("objects-13.kt")
            public void testObjects_13() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-13.kt");
            }

            @Test
            @TestMetadata("objects-14.kt")
            public void testObjects_14() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-14.kt");
            }

            @Test
            @TestMetadata("objects-15.kt")
            public void testObjects_15() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-15.kt");
            }

            @Test
            @TestMetadata("objects-16.kt")
            public void testObjects_16() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-16.kt");
            }

            @Test
            @TestMetadata("objects-17.kt")
            public void testObjects_17() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-17.kt");
            }

            @Test
            @TestMetadata("objects-18.kt")
            public void testObjects_18() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-18.kt");
            }

            @Test
            @TestMetadata("objects-19.kt")
            public void testObjects_19() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-19.kt");
            }

            @Test
            @TestMetadata("objects-2.kt")
            public void testObjects_2() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-2.kt");
            }

            @Test
            @TestMetadata("objects-20.kt")
            public void testObjects_20() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-20.kt");
            }

            @Test
            @TestMetadata("objects-21.kt")
            public void testObjects_21() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-21.kt");
            }

            @Test
            @TestMetadata("objects-3.kt")
            public void testObjects_3() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-3.kt");
            }

            @Test
            @TestMetadata("objects-4.kt")
            public void testObjects_4() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-4.kt");
            }

            @Test
            @TestMetadata("objects-5.kt")
            public void testObjects_5() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-5.kt");
            }

            @Test
            @TestMetadata("objects-6.kt")
            public void testObjects_6() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-6.kt");
            }

            @Test
            @TestMetadata("objects-7.kt")
            public void testObjects_7() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-7.kt");
            }

            @Test
            @TestMetadata("objects-8.kt")
            public void testObjects_8() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-8.kt");
            }

            @Test
            @TestMetadata("objects-9.kt")
            public void testObjects_9() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/reflekt/objects/objects-9.kt");
            }
        }
    }

    @Nested
    @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt")
    @TestDataPath("$PROJECT_ROOT")
    public class Smart_reflekt {
        @Test
        public void testAllFilesPresentInSmart_reflekt() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Nested
        @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/classes")
        @TestDataPath("$PROJECT_ROOT")
        public class Classes {
            @Test
            public void testAllFilesPresentInClasses() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/classes"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("classes-1.kt")
            public void testClasses_1() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/classes/classes-1.kt");
            }

            @Test
            @TestMetadata("classes-2.kt")
            public void testClasses_2() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/classes/classes-2.kt");
            }
        }

        @Nested
        @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/functions")
        @TestDataPath("$PROJECT_ROOT")
        public class Functions {
            @Test
            public void testAllFilesPresentInFunctions() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/functions"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("functions-1.kt")
            public void testFunctions_1() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/functions/functions-1.kt");
            }

            @Test
            @TestMetadata("functions-2.kt")
            public void testFunctions_2() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/functions/functions-2.kt");
            }
        }

        @Nested
        @TestMetadata("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/objects")
        @TestDataPath("$PROJECT_ROOT")
        public class Objects {
            @Test
            public void testAllFilesPresentInObjects() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/objects"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("objects-1.kt")
            public void testObjects_1() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/objects/objects-1.kt");
            }

            @Test
            @TestMetadata("objects-2.kt")
            public void testObjects_2() throws Exception {
                runTest("reflekt-plugin/src/test/resources/org/jetbrains/reflekt/plugin/compiler/code-gen/general-standalone-project-calling/smart-reflekt/objects/objects-2.kt");
            }
        }
    }
}
