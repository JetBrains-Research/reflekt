[versions]

# To change version you should change the version in the following places:
#  - here
#  - two places in the main README.md file (after releasing)
#
# Also, you should change the version in two places in the build.gradle.kts file in the example project
kotlin = "1.8.20"

buildconfig = "3.0.3"
detekt = "1.23.1"
dokka = "1.8.20"
diktat = "1.2.5"
junit-jupiter = "5.10.0"
junit-platform = "1.10.0"
kotlinpoet = "1.13.2"
kotlinx-serialization-protobuf = "1.5.1"
reflections = "0.10.2"
tomlj = "1.1.0"
zip4j = "2.11.5"
plugin-publish = "1.2.1"

[libraries]
gradle-plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradle-plugin-diktat = { module = "org.cqfn.diktat:diktat-gradle-plugin", version.ref = "diktat" }
# -------Tests-------
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
junit-platform-commons = { module = "org.junit.platform:junit-platform-commons", version.ref = "junit-platform" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }
junit-platform-runner = { module = "org.junit.platform:junit-platform-runner", version.ref = "junit-platform" }
junit-platform-suite-api = { module = "org.junit.platform:junit-platform-suite-api", version.ref = "junit-platform" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-compiler-internal-test-framework = { module = "org.jetbrains.kotlin:kotlin-compiler-internal-test-framework", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-script-runtime = { module = "org.jetbrains.kotlin:kotlin-script-runtime", version.ref = "kotlin" }
kotlin-annotations-jvm = { module = "org.jetbrains.kotlin:kotlin-annotations-jvm", version.ref = "kotlin" }
# -------Tests-------
gradle-plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization-protobuf" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
tomlj = { module = "org.tomlj:tomlj", version.ref = "tomlj" }
zip4j = { module = "net.lingala.zip4j:zip4j", version.ref = "zip4j" }

[plugins]
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
plugin-publish = { id = "com.gradle.plugin-publish", version.ref = "plugin-publish" }
